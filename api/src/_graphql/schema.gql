# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type OutputLogin {
  token: String!
}

type OutputRegister {
  status: Float!
  message: String!
}

type User {
  id: Int!
  username: String!
  email: String!
  password: String!
  avatar: String
  updatedAt: String!
  createdAt: String!
  projects: [Project!]!
}

type Card {
  id: Int!
  title: String!
  description: String
  updatedAt: String!
  createdAt: String!
  assignees: [User!]!
  columnId: Int!
}

type Column {
  id: Int!
  title: String!
  updatedAt: String!
  createdAt: String!
  projectId: Int!
  cards: [Card!]!
}

type Project {
  id: Int!
  title: String!
  image: String
  updatedAt: String!
  createdAt: String!
  users: [User!]!
  columns: [Column!]!
}

type Team {
  id: Int!
  title: String!
  updatedAt: String!
  createdAt: String!
  users: [User!]!
  projects: [Project!]!
}

type Query {
  getProject(id: Float!): Project!
  getUserProjects: [Project!]!
  getProjectColumns(data: GetColumnsDto!): [Column!]!
  getCards(columnId: Float!): [Card!]!
  getTeam(id: Float!): Team!
  getUserTeams: [Team!]!
}

input GetColumnsDto {
  projectId: Float!
}

type Mutation {
  login(data: LoginDto!): OutputLogin!
  register(data: CreateUserDto!): OutputRegister!
  addUserInProject(data: AddUserDto!): Project!
  createProject(data: CreateProjectDto!): Project!
  createColumn(data: CreateColumnDto!): Column!
  updateColumn(id: Float!, newTitle: String!): Column!
  createCard(data: CreateCardDto!): Card!
  updateCard(data: UpdateCardDto!): Card!
  createTeam(data: CreateTeamDto!): Team!
  addUserInTeam(data: AddUserToTeamDto!): Team!
}

input LoginDto {
  email: String!
  password: String!
}

input CreateUserDto {
  email: String!
  username: String!
  password: String!
}

input AddUserDto {
  projectId: Float!
  username: String!
}

input CreateProjectDto {
  teamId: Float!
  title: String!
}

input CreateColumnDto {
  title: String!
  projectId: Float!
}

input CreateCardDto {
  title: String!
  columnId: Float!
  description: String
  assigneeIds: [Float!]
  tagId: Float
}

input UpdateCardDto {
  cardId: Float!
  title: String
  description: String
  assigneeId: Float
  tagId: Float
}

input CreateTeamDto {
  title: String!
}

input AddUserToTeamDto {
  teamId: Float!
  username: String!
}

type Subscription {
  cardCreated(columnId: Float!): Card!
  cardUpdated(cardId: Float!): Card!
}