# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type OutputLogin {
  token: String!
}

type OutputRegister {
  status: Float!
  message: String!
}

type User {
  id: String!
  username: String!
  email: String!
  password: String!
  avatar: String
  updatedAt: String!
  createdAt: String!
  projects: [Project!]!
  cards: [Card!]!
}

type Card {
  id: String!
  title: String!
  description: String
  updatedAt: String!
  createdAt: String!
  assignees: [User!]!
  columnId: String!
}

type Column {
  id: String!
  title: String!
  updatedAt: String!
  createdAt: String!
  projectId: String!
  cards: [Card!]!
}

type Project {
  id: String!
  _count: JSON!
  title: String!
  image: String
  updatedAt: String!
  createdAt: String!
  users: [User!]!
  columns: [Column!]!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Team {
  id: String!
  title: String!
  updatedAt: String!
  createdAt: String!
  users: [User!]!
  projects: [Project!]!
}

type Query {
  getProject(teamTitle: String!, projectId: String!): Project!
  getUserProjects: [Project!]!
  getTeam(title: String!): Team!
  getUserTeams: [Team!]!
  getProjectColumns(data: GetColumnsDto!): [Column!]!
  getCards(columnId: String!): [Card!]!
}

input GetColumnsDto {
  teamTitle: String!
  projectId: String!
}

type Mutation {
  login(data: LoginDto!): OutputLogin!
  register(data: CreateUserDto!): OutputRegister!
  addUserInProject(data: AddUserDto!): Project!
  createProject(data: CreateProjectDto!): Project!
  createTeam(data: CreateTeamDto!): Team!
  addUserInTeam(data: AddUserToTeamDto!): Team!
  createColumn(data: CreateColumnDto!): Column!
  updateColumn(id: String!, newTitle: String!): Column!
  createCard(data: CreateCardDto!): Card!
  updateCard(data: UpdateCardDto!): Card!
}

input LoginDto {
  email: String!
  password: String!
}

input CreateUserDto {
  email: String!
  username: String!
  password: String!
}

input AddUserDto {
  projectId: String!
  username: String!
}

input CreateProjectDto {
  teamId: String!
  title: String!
}

input CreateTeamDto {
  title: String!
}

input AddUserToTeamDto {
  teamId: String!
  username: String!
}

input CreateColumnDto {
  title: String!
  projectId: String!
}

input CreateCardDto {
  title: String!
  columnId: String!
  description: String
  assigneeIds: [String!]
  tagId: String
}

input UpdateCardDto {
  cardId: String!
  title: String
  description: String
  assigneeId: String
  tagId: String
}

type Subscription {
  cardCreated(columnId: String!): Card!
  cardUpdated(cardId: String!): Card!
}